//
// InsightsAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

#if canImport(AnyCodable)
  import AnyCodable
#endif

open class InsightsAPI {

  /**
     Send requests to the Algolia REST API.

     - parameter path: (path) Path of the endpoint, anything after \&quot;/1\&quot; must be specified.
     - parameter parameters: (query) Query parameters to apply to the current query. (optional)
     - returns: AnyCodable
     */
  @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
  open class func customDelete(path: String, parameters: [String: AnyCodable]? = nil) async throws
    -> AnyCodable
  {
    return try await customDeleteWithRequestBuilder(path: path, parameters: parameters).execute()
      .body
  }

  /**
     Send requests to the Algolia REST API.

     This method allow you to send requests to the Algolia REST API.
     - parameter path: (path) Path of the endpoint, anything after \&quot;/1\&quot; must be specified.
     - parameter parameters: (query) Query parameters to apply to the current query. (optional)
     - returns: RequestBuilder<AnyCodable>
     */
  open class func customDeleteWithRequestBuilder(
    path: String, parameters: [String: AnyCodable]? = nil
  ) -> RequestBuilder<AnyCodable> {
    var localVariablePath = "/1{path}"
    let pathPreEscape = "\(APIHelper.mapValueToPathItem(path))"
    let pathPostEscape =
      pathPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
    localVariablePath = localVariablePath.replacingOccurrences(
      of: "{path}", with: pathPostEscape, options: .literal, range: nil)
    let localVariableURLString = AlgoliaSearchClientAPI.basePath + localVariablePath
    let localVariableParameters: [String: Any]? = nil

    var localVariableUrlComponents = URLComponents(string: localVariableURLString)
    localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
      "parameters": (wrappedValue: parameters?.encodeToJSON(), isExplode: true)
    ])

    let localVariableNillableHeaders: [String: Any?] = [:]

    let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

    let localVariableRequestBuilder: RequestBuilder<AnyCodable>.Type = AlgoliaSearchClientAPI
      .requestBuilderFactory.getBuilder()

    return localVariableRequestBuilder.init(
      method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString),
      parameters: localVariableParameters, headers: localVariableHeaderParameters,
      requiresAuthentication: true)
  }

  /**
     Send requests to the Algolia REST API.

     - parameter path: (path) Path of the endpoint, anything after \&quot;/1\&quot; must be specified.
     - parameter parameters: (query) Query parameters to apply to the current query. (optional)
     - returns: AnyCodable
     */
  @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
  open class func customGet(path: String, parameters: [String: AnyCodable]? = nil) async throws
    -> AnyCodable
  {
    return try await customGetWithRequestBuilder(path: path, parameters: parameters).execute().body
  }

  /**
     Send requests to the Algolia REST API.

     This method allow you to send requests to the Algolia REST API.
     - parameter path: (path) Path of the endpoint, anything after \&quot;/1\&quot; must be specified.
     - parameter parameters: (query) Query parameters to apply to the current query. (optional)
     - returns: RequestBuilder<AnyCodable>
     */
  open class func customGetWithRequestBuilder(path: String, parameters: [String: AnyCodable]? = nil)
    -> RequestBuilder<AnyCodable>
  {
    var localVariablePath = "/1{path}"
    let pathPreEscape = "\(APIHelper.mapValueToPathItem(path))"
    let pathPostEscape =
      pathPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
    localVariablePath = localVariablePath.replacingOccurrences(
      of: "{path}", with: pathPostEscape, options: .literal, range: nil)
    let localVariableURLString = AlgoliaSearchClientAPI.basePath + localVariablePath
    let localVariableParameters: [String: Any]? = nil

    var localVariableUrlComponents = URLComponents(string: localVariableURLString)
    localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
      "parameters": (wrappedValue: parameters?.encodeToJSON(), isExplode: true)
    ])

    let localVariableNillableHeaders: [String: Any?] = [:]

    let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

    let localVariableRequestBuilder: RequestBuilder<AnyCodable>.Type = AlgoliaSearchClientAPI
      .requestBuilderFactory.getBuilder()

    return localVariableRequestBuilder.init(
      method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString),
      parameters: localVariableParameters, headers: localVariableHeaderParameters,
      requiresAuthentication: true)
  }

  /**
     Send requests to the Algolia REST API.

     - parameter path: (path) Path of the endpoint, anything after \&quot;/1\&quot; must be specified.
     - parameter parameters: (query) Query parameters to apply to the current query. (optional)
     - parameter body: (body) Parameters to send with the custom request. (optional)
     - returns: AnyCodable
     */
  @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
  open class func customPost(
    path: String, parameters: [String: AnyCodable]? = nil, body: AnyCodable? = nil
  ) async throws -> AnyCodable {
    return try await customPostWithRequestBuilder(path: path, parameters: parameters, body: body)
      .execute().body
  }

  /**
     Send requests to the Algolia REST API.

     This method allow you to send requests to the Algolia REST API.
     - parameter path: (path) Path of the endpoint, anything after \&quot;/1\&quot; must be specified.
     - parameter parameters: (query) Query parameters to apply to the current query. (optional)
     - parameter body: (body) Parameters to send with the custom request. (optional)
     - returns: RequestBuilder<AnyCodable>
     */
  open class func customPostWithRequestBuilder(
    path: String, parameters: [String: AnyCodable]? = nil, body: AnyCodable? = nil
  ) -> RequestBuilder<AnyCodable> {
    var localVariablePath = "/1{path}"
    let pathPreEscape = "\(APIHelper.mapValueToPathItem(path))"
    let pathPostEscape =
      pathPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
    localVariablePath = localVariablePath.replacingOccurrences(
      of: "{path}", with: pathPostEscape, options: .literal, range: nil)
    let localVariableURLString = AlgoliaSearchClientAPI.basePath + localVariablePath
    let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

    var localVariableUrlComponents = URLComponents(string: localVariableURLString)
    localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
      "parameters": (wrappedValue: parameters?.encodeToJSON(), isExplode: true)
    ])

    let localVariableNillableHeaders: [String: Any?] = [:]

    let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

    let localVariableRequestBuilder: RequestBuilder<AnyCodable>.Type = AlgoliaSearchClientAPI
      .requestBuilderFactory.getBuilder()

    return localVariableRequestBuilder.init(
      method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString),
      parameters: localVariableParameters, headers: localVariableHeaderParameters,
      requiresAuthentication: true)
  }

  /**
     Send requests to the Algolia REST API.

     - parameter path: (path) Path of the endpoint, anything after \&quot;/1\&quot; must be specified.
     - parameter parameters: (query) Query parameters to apply to the current query. (optional)
     - parameter body: (body) Parameters to send with the custom request. (optional)
     - returns: AnyCodable
     */
  @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
  open class func customPut(
    path: String, parameters: [String: AnyCodable]? = nil, body: AnyCodable? = nil
  ) async throws -> AnyCodable {
    return try await customPutWithRequestBuilder(path: path, parameters: parameters, body: body)
      .execute().body
  }

  /**
     Send requests to the Algolia REST API.

     This method allow you to send requests to the Algolia REST API.
     - parameter path: (path) Path of the endpoint, anything after \&quot;/1\&quot; must be specified.
     - parameter parameters: (query) Query parameters to apply to the current query. (optional)
     - parameter body: (body) Parameters to send with the custom request. (optional)
     - returns: RequestBuilder<AnyCodable>
     */
  open class func customPutWithRequestBuilder(
    path: String, parameters: [String: AnyCodable]? = nil, body: AnyCodable? = nil
  ) -> RequestBuilder<AnyCodable> {
    var localVariablePath = "/1{path}"
    let pathPreEscape = "\(APIHelper.mapValueToPathItem(path))"
    let pathPostEscape =
      pathPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
    localVariablePath = localVariablePath.replacingOccurrences(
      of: "{path}", with: pathPostEscape, options: .literal, range: nil)
    let localVariableURLString = AlgoliaSearchClientAPI.basePath + localVariablePath
    let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

    var localVariableUrlComponents = URLComponents(string: localVariableURLString)
    localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
      "parameters": (wrappedValue: parameters?.encodeToJSON(), isExplode: true)
    ])

    let localVariableNillableHeaders: [String: Any?] = [:]

    let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

    let localVariableRequestBuilder: RequestBuilder<AnyCodable>.Type = AlgoliaSearchClientAPI
      .requestBuilderFactory.getBuilder()

    return localVariableRequestBuilder.init(
      method: "PUT", URLString: (localVariableUrlComponents?.string ?? localVariableURLString),
      parameters: localVariableParameters, headers: localVariableHeaderParameters,
      requiresAuthentication: true)
  }

  /**
     Send events.

     - parameter insightsEvents: (body)
     - returns: EventsResponse
     */
  @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
  open class func pushEvents(insightsEvents: InsightsEvents) async throws -> EventsResponse {
    return try await pushEventsWithRequestBuilder(insightsEvents: insightsEvents).execute().body
  }

  /**
     Send events.

     Send a list of events to the Insights API.  You can include up to 1,000 events in a single request, but the request body must be smaller than 2&nbsp;MB.
     - parameter insightsEvents: (body)
     - returns: RequestBuilder<EventsResponse>
     */
  open class func pushEventsWithRequestBuilder(insightsEvents: InsightsEvents) -> RequestBuilder<
    EventsResponse
  > {
    let localVariablePath = "/1/events"
    let localVariableURLString = AlgoliaSearchClientAPI.basePath + localVariablePath
    let localVariableParameters = JSONEncodingHelper.encodingParameters(
      forEncodableObject: insightsEvents)

    let localVariableUrlComponents = URLComponents(string: localVariableURLString)

    let localVariableNillableHeaders: [String: Any?] = [:]

    let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

    let localVariableRequestBuilder: RequestBuilder<EventsResponse>.Type = AlgoliaSearchClientAPI
      .requestBuilderFactory.getBuilder()

    return localVariableRequestBuilder.init(
      method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString),
      parameters: localVariableParameters, headers: localVariableHeaderParameters,
      requiresAuthentication: true)
  }
}
